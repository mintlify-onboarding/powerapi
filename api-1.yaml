openapi: 3.0.1
info:
  title: PowerAPI
  version: 0.0.1
servers:
  - url: https://api.staging.foodtekk.com
tags:
  - name: addresses
    x-displayName: Addresses
    description: Operations about addresses
  - name: authentication
    x-displayName: Authentication
    description: Operations about authentication
  - name: banners
    x-displayName: Banners
    description: Operations about banners
  - name: blog_posts
    x-displayName: Blog Posts
    description: Operations about blog_posts
  - name: bookings
    x-displayName: Bookings
    description: Operations about bookings
  - name: businesses
    x-displayName: Businesses
    description: Operations about businesses
  - name: cards
    x-displayName: Cards
    description: Operations about cards
  - name: categories
    x-displayName: Categories
    description: Operations about categories
  - name: caterings
    x-displayName: Caterings
    description: Operations about caterings
  - name: cities
    x-displayName: Cities
    description: Operations about cities
  - name: city_with_countries
    x-displayName: City With Countries
    description: Operations about city_with_countries
  - name: deliveries
    x-displayName: Deliveries
    description: Operations about deliveries
  - name: devices
    x-displayName: Devices
    description: Operations about devices
  - name: dishes
    x-displayName: Dishes
    description: Operations about dishes
  - name: elements
    x-displayName: Elements
    description: Operations about elements
  - name: external_service_links
    x-displayName: External Service Links
    description: Operations about external_service_links
  - name: external_services
    x-displayName: External Services
    description: Operations about external_services
  - name: favorites
    x-displayName: Favorites
    description: Operations about favorites
  - name: favorite_suppliers
    x-displayName: Favorite Suppliers
    description: Operations about favorite_suppliers
  - name: feedbacks
    x-displayName: Feedbacks
    description: Operations about feedbacks
  - name: groups
    x-displayName: Groups
    description: Operations about groups
  - name: guides
    x-displayName: Guides
    description: Operations about guides
  - name: intelligence_notifications
    x-displayName: Intelligence Notifications
    description: Operations about intelligence_notifications
  - name: members
    x-displayName: Members
    description: Operations about members
  - name: menus
    x-displayName: Menus
    description: Operations about menus
  - name: news_posts
    x-displayName: News Posts
    description: Operations about news_posts
  - name: notifications
    x-displayName: Notifications
    description: Operations about notifications
  - name: open_periods
    x-displayName: Open Periods
    description: Operations about open_periods
  - name: order_periods
    x-displayName: Order Periods
    description: Operations about order_periods
  - name: orders
    x-displayName: Orders
    description: Operations about orders
  - name: partners
    x-displayName: Partners
    description: Operations about partners
  - name: partner_integrations
    x-displayName: Partner Integrations
    description: Operations about partner_integrations
  - name: payments
    x-displayName: Payments
    description: Operations about payments
  - name: pictures
    x-displayName: Pictures
    description: Operations about pictures
  - name: preferred_partners
    x-displayName: Preferred Partners
    description: Operations about preferred_partners
  - name: privatisations
    x-displayName: Privatisations
    description: Operations about privatisations
  - name: products
    x-displayName: Products
    description: Operations about products
  - name: referrals
    x-displayName: Referrals
    description: Operations about referrals
  - name: reservations
    x-displayName: Reservations
    description: Operations about reservations
  - name: reviews
    x-displayName: Reviews
    description: Operations about reviews
  - name: specializations
    x-displayName: Specializations
    description: Operations about specializations
  - name: special_open_periods
    x-displayName: Special Open Periods
    description: Operations about special_open_periods
  - name: static_pages
    x-displayName: Static Pages
    description: Operations about static_pages
  - name: stripe_plans
    x-displayName: Stripe Plans
    description: Operations about stripe_plans
  - name: stripe_products
    x-displayName: Stripe Products
    description: Operations about stripe_products
  - name: subscriptions
    x-displayName: Subscriptions
    description: Operations about subscriptions
  - name: suppliers
    x-displayName: Suppliers
    description: Operations about suppliers
  - name: supplier_categories
    x-displayName: Supplier Categories
    description: Operations about supplier_categories
  - name: supplier_elements
    x-displayName: Supplier Elements
    description: Operations about supplier_elements
  - name: supplier_orders
    x-displayName: Supplier Orders
    description: Operations about supplier_orders
  - name: supplier_catalogs
    x-displayName: Supplier Catalogs
    description: Operations about supplier_catalogs
  - name: supplier_product_categories
    x-displayName: Supplier Product Categories
    description: Operations about supplier_product_categories
  - name: supplier_product_subcategories
    x-displayName: Supplier Product Subcategories
    description: Operations about supplier_product_subcategories
  - name: supplier_products
    x-displayName: Supplier Products
    description: Operations about supplier_products
  - name: tables
    x-displayName: Tables
    description: Operations about tables
  - name: team_members
    x-displayName: Team Members
    description: Operations about team_members
  - name: users
    x-displayName: Users
    description: Operations about users
  - name: widgets
    x-displayName: Widgets
    description: Operations about widgets
paths:
  /oauth/token:
    post:
      tags:
        - authentication
      summary: Create an access token
      description: >
        Creates an access token for the specified user credentials, the access
        token will last

        for 4 weeks. It can be used as a bearer token to access protected endpoints.
      security: []
      operationId: postOauthToken
      requestBody:
        content:
          application/json:
            schema:
              required:
                - scope
                - grant_type
                - email
                - password
              properties:
                scope:
                  type: string
                  description: Scope
                  enum:
                    - trusted public
                grant_type:
                  type: string
                  description: Grant type
                  enum:
                    - password
                email:
                  type: string
                  description: User email
                  example: me@example.com
                password:
                  type: string
                  description: User password
                  example: "1234"
        required: true
      responses:
        "201":
          description: Obtain access token using users credentials
          content:
            application/vnd.api+json:
              schema:
                required:
                  - access_token
                  - token_type
                  - expires_in
                  - scope
                  - created_at
                properties:
                  access_token:
                    type: string
                    description: Access token
                    example: 412e4ce497df832272db63c627a00...
                  token_type:
                    type: string
                    description: Token type
                    example: Bearer
                  expires_in:
                    type: integer
                    description: Token expiration time in seconds
                    example: 2419200
                  scope:
                    type: string
                    description: Scope
                    example: trusted public
                  created_at:
                    type: integer
                    description: Token creation time in seconds
                    example: 1582219200
  /api/v1/bookings/{id}:
    get:
      tags:
        - bookings
      summary: Return a Booking
      operationId: getApiV1BookingsId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: reservation, table"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Booking
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - bookings
      summary: Update a Booking
      operationId: patchApiV1BookingsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - bookings
                    attributes:
                      type: object
                      properties:
                        status:
                          type: string
                        seats_taken:
                          type: integer
                          format: int32
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update a Booking
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/permitted_list:
    get:
      tags:
        - businesses
      summary: Get API users permitted businesses
      description: Returns a list of businesses that are allowed for API user
      operationId: getApiV1BusinessesPermittedList
      responses:
        "200":
          description: Returns a list of businesses that are allowed for API user
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}:
    get:
      tags:
        - businesses
      summary: Return a Business
      operationId: getApiV1BusinessesId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, groups, menus, open_periods, order_periods,
            orders, partners, pictures, products, reviews, exclusive_suppliers"
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
            enum:
              - af
              - sq
              - ar
              - be
              - bg
              - ca
              - zh-CN
              - zh-TW
              - hr
              - cs
              - da
              - nl
              - en
              - et
              - tl
              - fi
              - fr
              - gl
              - de
              - el
              - iw
              - hi
              - hu
              - is
              - id
              - ga
              - it
              - ja
              - ko
              - la
              - lv
              - lt
              - mk
              - ms
              - mt
              - no
              - fa
              - pl
              - pt
              - ro
              - ru
              - sr
              - sk
              - sl
              - es
              - sw
              - sv
              - th
              - tr
              - uk
              - vi
              - cy
              - yi
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Business
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Business"
              example:
                data:
                  id: 50404d91-bc45-43b2-8360-47f26b5ddc33
                  type: businesses
                  links:
                    self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33
                  attributes:
                    allow-pickup: true
                    approved-for-lefood: true
                    auto-accept-orders: false
                    auto-accept-booking: true
                    available-in-lefood: true
                    average-delivery-time: 0
                    average-score: 8.1
                    average-waiting-time: 0
                    bill-url: null
                    bio: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                    breakfast-service: true
                    brunch-service: false
                    cafe-service: true
                    can-pay-with-cards: true
                    can-pay-with-cash: true
                    can-pay-with-mobile: true
                    city: London
                    contact-with-proper-owner-possible: true
                    country: United Kingdom
                    country-code: GB
                    currency: GBP
                    delivery-available: true
                    delivery-charge-ref: code.1
                    delivery-price-participation-ratio: "0.0"
                    delivery-service-type-ref: code*1
                    delivery-url: https://pyszne.pl
                    detected-language: la
                    dinner-service: false
                    email: aleksandra.bochenska@netguru.com
                    facebook: https://facebook.com
                    favorite-id: null
                    geolocation-lat: "51.5134147"
                    geolocation-lng: "-0.117157"
                    has-catering: false
                    has-delivery: true
                    has-join-the-queue: false
                    has-online-booking: true
                    has-private-events: false
                    has-reservations: true
                    has-takeaway: true
                    hubrise-catalog-id: 1v3b3
                    hubrise-catalog-name: QA Business
                    instagram: https://instagram.com/netguru/
                    live-info: null
                    logo:
                      url: https://foodetective-staging-backend-data.s3.amazonaws.com/uploads/business/logo/50404d91-bc45-43b2-8360-47f26b5ddc33/6767c7dc-aeb5-4bb4-83de-4c3311512d77.jpeg
                    lunch-service: true
                    main-photo-url: https://foodetective-staging-backend-data.s3.amazonaws.com/uploads/picture/photo/459b132f-4bb6-4496-925c-eef1ea0a7f9d/cc7ba4bc-e24d-4861-a9c0-6032918f13a7.jpeg
                    max-reservation-size: 20
                    menu-synced: false
                    min-amount-for-delivery-cents: 2000
                    min-time-before-reservation: 3600
                    name: Test with Orkestro
                    online-booking-url: https://booking.com
                    owner-role: Additional information :)
                    partoo-business-id: 615436b10a54203456024339
                    phone: "7911123456"
                    phone-country-code: GG
                    phone-country-prefix: "44"
                    pos-partner-integration-exists: true
                    post-code: WC2B 6UF
                    price-per-person: 20
                    price-range: 2
                    rating: 8.1
                    region: London, City of
                    region-code: GB-LND
                    secret-code: TGC12345
                    slug: test-with-orkestro
                    snack-service: true
                    state: published
                    street: Kingsway
                    street-number: "1"
                    stripe-currency: GBP
                    stripe-payment-ref: code-1
                    eat-in-ref: null
                    stripe-user-id: acct_1JhWDyBInYph3F9j
                    tagline: null
                    takeaway-service-type-ref: code_1
                    takeaway-url: https://glovo.pl
                    time-of-stay: 2700
                    time-slots: 900
                    timezone: Europe/London
                    visible-in-lefood: true
                    website: https://netguru.com
                    youtube: https://www.youtube.com/watch?v=VXBFPjRrsV4&ab
                    settings:
                      orkestro_delivery_confirmation_enabled: true
                      order_business_web_notifications_enabled: true
                      reservation_business_web_notifications_enabled: true
                  relationships:
                    addresses:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/addresses
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/addresses
                    groups:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/groups
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/groups
                    menus:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/menus
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/menus
                    open-periods:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/open-periods
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/open-periods
                    order-periods:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/order-periods
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/order-periods
                    orders:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/orders
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/orders
                    partners:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/partners
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/partners
                    pictures:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/pictures
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/pictures
                    products:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/products
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/products
                    reviews:
                      links:
                        self: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/relationships/reviews
                        related: /businesses/50404d91-bc45-43b2-8360-47f26b5ddc33/reviews
    delete:
      tags:
        - businesses
      summary: Delete a Business
      operationId: deleteApiV1BusinessesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Business
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - businesses
      summary: Update a business
      operationId: patchApiV1BusinessesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - businesses
                    attributes:
                      type: object
                      properties:
                        allow_pickup: {}
                        auto_accept_orders: {}
                        auto_accept_booking: {}
                        auto_accept_booking_limit:
                          type: string
                          description: Number of people allowed for auto accept booking per reservation
                        order_business_web_notifications_enabled: {}
                        reservation_business_web_notifications_enabled: {}
                        orkestro_delivery_confirmation_enabled: {}
                        available_in_lefood: {}
                        average_delivery_time:
                          type: integer
                          format: int32
                        average_waiting_time:
                          type: integer
                          format: int32
                        bill_url:
                          type: string
                        bio:
                          type: string
                        breakfast_service: {}
                        brunch_service: {}
                        cafe_service: {}
                        can_pay_with_cards: {}
                        can_pay_with_cash: {}
                        can_pay_with_mobile: {}
                        city:
                          type: string
                        country_code:
                          type: string
                        currency:
                          type: string
                        delivery_charge_ref:
                          type: string
                        delivery_price_participation_ratio:
                          type: number
                          format: double
                        delivery_service_type_ref:
                          type: string
                        delivery_url:
                          type: string
                        dinner_service: {}
                        email:
                          type: string
                        facebook:
                          type: string
                        youtube:
                          type: string
                        groups_list:
                          type: string
                          description: Slugs of groups delimited by comma
                        has_catering: {}
                        has_join_the_queue: {}
                        has_private_events: {}
                        has_reservations: {}
                        instagram:
                          type: string
                        live_info:
                          type: string
                        logo:
                          type: string
                          format: binary
                        lunch_service: {}
                        max_reservation_size:
                          type: integer
                          format: int32
                        min_amount_for_delivery_cents:
                          type: integer
                          format: int32
                        min_time_before_reservation:
                          type: integer
                          description: Minimum time before creating a reservation expressed in seconds
                          format: int32
                        name:
                          type: string
                        online_booking_url:
                          type: string
                        owner_role:
                          type: string
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        post_code:
                          type: string
                        price_per_person:
                          type: string
                        region_code:
                          type: string
                        secret_code:
                          type: string
                        snack_service: {}
                        state:
                          type: string
                        street:
                          type: string
                        street_number:
                          type: string
                        stripe_currency:
                          type: string
                        stripe_payment_ref:
                          type: string
                        eat_in_ref:
                          type: string
                        tagline:
                          type: string
                        takeaway_service_type_ref:
                          type: string
                        takeaway_url:
                          type: string
                        time_of_stay:
                          type: integer
                          description: Default time of staying in restaurant expressed in seconds
                          format: int32
                        time_slots:
                          type: integer
                          description: Time specifying available hours for booking expressed in seconds
                          format: int32
                        visible_in_lefood: {}
                        website:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/similar:
    get:
      tags:
        - businesses
      summary: Get published businesses with similar location
      operationId: getApiV1BusinessesIdSimilar
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, groups, menus, open_periods, order_periods,
            orders, partners, pictures, products, reviews, exclusive_suppliers"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return published businesses with similar location
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/invoices:
    get:
      tags:
        - businesses
      summary: Get all invoices for specific business
      operationId: getApiV1BusinessesIdInvoices
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum:
              - draft
              - open
              - paid
              - void
              - uncollectible
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all invoices for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/external_service_links:
    get:
      tags:
        - businesses
      summary: Get external service links for specific business
      operationId: getApiV1BusinessesIdExternalServiceLinks
      parameters:
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return external service links for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/deliveries:
    get:
      tags:
        - businesses
      summary: Get all deliveries for specific business
      operationId: getApiV1BusinessesIdDeliveries
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all deliveries for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/deliveries/{code}:
    get:
      tags:
        - businesses
      summary: Get a delivery for specific business
      operationId: getApiV1BusinessesIdDeliveriesCode
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: code
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a delivery for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses:
    post:
      tags:
        - businesses
      summary: Create a business
      description: Create a business record for current user
      operationId: postApiV1Businesses
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - businesses
                    attributes:
                      type: object
                      properties:
                        average_delivery_time:
                          type: integer
                          format: int32
                        bill_url:
                          type: string
                        bio:
                          type: string
                        breakfast_service: {}
                        brunch_service: {}
                        cafe_service: {}
                        can_pay_with_cards: {}
                        can_pay_with_cash: {}
                        can_pay_with_mobile: {}
                        city:
                          type: string
                        country_code:
                          type: string
                        currency:
                          type: string
                        delivery_charge_ref:
                          type: string
                        delivery_price_participation_ratio:
                          type: number
                          format: double
                        delivery_service_type_ref:
                          type: string
                        delivery_url:
                          type: string
                        dinner_service: {}
                        email:
                          type: string
                        facebook:
                          type: string
                        youtube:
                          type: string
                        groups_list:
                          type: string
                          description: Slugs of groups delimited by comma
                        has_catering: {}
                        has_join_the_queue: {}
                        has_private_events: {}
                        has_reservations: {}
                        instagram:
                          type: string
                        live_info:
                          type: string
                        logo:
                          type: string
                          format: binary
                        lunch_service: {}
                        max_reservation_size:
                          type: integer
                          format: int32
                        min_amount_for_delivery_cents:
                          type: integer
                          format: int32
                        min_time_before_reservation:
                          type: integer
                          description: Minimum time before creating a reservation expressed in seconds
                          format: int32
                        name:
                          type: string
                        online_booking_url:
                          type: string
                        owner_role:
                          type: string
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        post_code:
                          type: string
                        price_per_person:
                          type: string
                        region_code:
                          type: string
                        secret_code:
                          type: string
                        snack_service: {}
                        state:
                          type: string
                        street:
                          type: string
                        street_number:
                          type: string
                        stripe_currency:
                          type: string
                        stripe_payment_ref:
                          type: string
                        eat_in_ref:
                          type: string
                        tagline:
                          type: string
                        takeaway_service_type_ref:
                          type: string
                        takeaway_url:
                          type: string
                        time_of_stay:
                          type: integer
                          description: Default time of staying in restaurant expressed in seconds
                          format: int32
                        time_slots:
                          type: integer
                          description: Time specifying available hours for booking expressed in seconds
                          format: int32
                        visible_in_lefood: {}
                        website:
                          type: string
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a business record for current user
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/integrations/partoo:
    post:
      tags:
        - businesses
      summary: Connect given business to RPM.
      operationId: postApiV1BusinessesIdIntegrationsRPM
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Connect given business to RPM.
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - businesses
      summary: Disconnect the business from RPM.
      operationId: deleteApiV1BusinessesIdIntegrationsRPM
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Disconnect the business from RPM.
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - businesses
      summary: Update given business on RPM.
      operationId: patchApiV1BusinessesIdIntegrationsRPM
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Update given business on RPM.
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/exclusive_suppliers:
    get:
      tags:
        - businesses
      summary: Return all exclusive suppliers for a specific business
      operationId: getApiV1BusinessesIdExclusiveSuppliers
      parameters:
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all exclusive suppliers for a specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/members:
    get:
      tags:
        - businesses
      summary: Return all members for specific business
      operationId: getApiV1BusinessesIdMembers
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business, user"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all members for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/favorite_suppliers:
    get:
      tags:
        - businesses
      summary: Return favorite suppliers for specific business
      operationId: getApiV1BusinessesIdFavoriteSuppliers
      parameters:
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return favorite suppliers for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/preferred_partners:
    get:
      tags:
        - businesses
      summary: Return preferred partners for specific business
      operationId: getApiV1BusinessesIdPreferredPartners
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: users, partner_integrations"
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                filter[categories]:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Return preferred partners for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/orders/orders_partners:
    get:
      tags:
        - businesses
      summary: Return all business partners used to make orders
      operationId: getApiV1BusinessesIdOrdersOrdersPartners
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, elements, business"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all business partners used to make orders
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/orders:
    get:
      tags:
        - businesses
      summary: Return all orders for specific business
      operationId: getApiV1BusinessesIdOrders
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, elements, business"
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[channel]
          in: query
          schema:
            type: string
        - name: filter[day]
          in: query
          schema:
            type: string
            format: date
        - name: filter[states]
          in: query
          schema:
            type: string
        - name: filter[order_type]
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all orders for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/supplier_orders:
    get:
      tags:
        - businesses
      summary: Return all supplier orders for specific business
      operationId: getApiV1BusinessesIdSupplierOrders
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: supplier_elements, supplier_products, supplier"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all supplier orders for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/orkestro/delivery_price:
    post:
      tags:
        - businesses
      summary: Return Orkestro delivery price.
      operationId: postApiV1BusinessesIdOrkestroDeliveryPrice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - businesses
                    attributes:
                      type: object
                      properties:
                        latitude:
                          type: number
                          format: double
                        longitude:
                          type: number
                          format: double
                        basket_value:
                          type: integer
                          format: int32
                      required:
                        - latitude
                        - longitude
                  required:
                    - id
                    - type
        required: true
      responses:
        "201":
          description: Return Orkestro delivery price.
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/hubrise/upload_catalog:
    post:
      tags:
        - businesses
      summary: Upload business menu to hubrise catalog
      operationId: postApiV1BusinessesIdHubriseUploadCatalog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                page:
                  type: integer
                  description: Page offset to fetch.
                  format: int32
                  default: 1
                per_page:
                  type: integer
                  description: Number of results to return per page.
                  format: int32
                  default: 10
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/hubrise/download_catalog:
    get:
      tags:
        - businesses
      summary: Download catalog for business from Hubrise
      operationId: getApiV1BusinessesIdHubriseDownloadCatalog
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: pictures, dish_option_categories, business, category"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Download catalog for business from Hubrise
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/privatisations:
    get:
      tags:
        - businesses
      summary: Return all privatisations for specific business
      operationId: getApiV1BusinessesIdPrivatisations
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business, user"
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[start_date]
          in: query
          schema:
            type: string
            format: date
        - name: filter[end_date]
          in: query
          schema:
            type: string
            format: date
        - name: filter[statuses]
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all privatisations for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/payments:
    get:
      tags:
        - businesses
      summary: Return all payments for orders within specific business
      operationId: getApiV1BusinessesIdPayments
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[for_delivery]
          in: query
          schema: {}
        - name: filter[delivery_price_business_participation]
          in: query
          schema: {}
        - name: filter[states]
          in: query
          schema:
            type: string
        - name: filter[from_created_at]
          in: query
          schema:
            type: string
            format: date-time
        - name: filter[to_created_at]
          in: query
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all payments for orders within specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/reservations:
    get:
      tags:
        - businesses
      summary: Return all reservations for specific business
      operationId: getApiV1BusinessesIdReservations
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: bookings, tables, business, user"
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[start_date]
          in: query
          schema:
            type: string
            format: date
        - name: filter[end_date]
          in: query
          schema:
            type: string
            format: date
        - name: filter[from]
          in: query
          schema:
            type: integer
            format: int32
        - name: filter[to]
          in: query
          schema:
            type: integer
            format: int32
        - name: filter[states]
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all reservations for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/tables:
    get:
      tags:
        - businesses
      summary: Return all tables for specific business
      operationId: getApiV1BusinessesIdTables
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business, bookings"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 30
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all tables for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/subscriptions:
    get:
      tags:
        - businesses
      summary: Return all subscriptions for specific business
      operationId: getApiV1BusinessesIdSubscriptions
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[scope]
          in: query
          description: Subscriptions scoped to the group of statuses
          schema:
            type: string
            enum:
              - not_terminated
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all subscriptions for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/clients:
    get:
      tags:
        - businesses
      summary: Return all clients for specific business
      operationId: getApiV1BusinessesIdClients
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: Name/email search query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all clients for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/guests:
    get:
      tags:
        - businesses
      summary: Return all guests for specific business
      operationId: getApiV1BusinessesIdGuests
      parameters:
        - name: search
          in: query
          description: Search query by first_name, last_name or email
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all guests for specific business
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Guest"
                  meta:
                    $ref: "#/components/schemas/Meta"
              example:
                data:
                  - id: 5c12333e-62ac-4640-af6c-66bf51a86c14
                    type: guests
                    links:
                      self: /guests/5c12333e-62ac-4640-af6c-66bf51a86c14
                    attributes:
                      email: john@email.com
                      first-name: John
                      last-name: Smith
                      birthday: null
                      phone: "127834563"
                      phone-country-code: FR
                      phone-country-prefix: "33"
                      tags: []
                      general-note: null
                      visit-note: null
                meta:
                  total-count: 22
                  total-pages: 3
    post:
      tags:
        - businesses
      summary: Create a guest
      operationId: postApiV1BusinessesIdGuests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - guests
                    attributes:
                      type: object
                      properties:
                        email:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        birthday:
                          type: string
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        tags:
                          type: array
                          items:
                            type: string
                        general_note:
                          type: string
                        visit_note:
                          type: string
                      required:
                        - email
                        - first_name
                        - last_name
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Return created guest
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Guest"
              example:
                data:
                  id: 5c12333e-62ac-4640-af6c-66bf51a86c14
                  type: guests
                  links:
                    self: /guests/5c12333e-62ac-4640-af6c-66bf51a86c14
                  attributes:
                    email: john@email.com
                    first-name: John
                    last-name: Smith
                    birthday: null
                    phone: "127834563"
                    phone-country-code: FR
                    phone-country-prefix: "33"
                    tags: []
                    general-note: null
                    visit-note: null
  /api/v1/businesses/{id}/guests/{guest_id}:
    get:
      tags:
        - businesses
      summary: Get a guest
      description: Return guest for specific business
      operationId: getApiV1BusinessesIdGuestsGuestId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: guest_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return guest for specific business
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Guest"
              example:
                data:
                  id: 5c12333e-62ac-4640-af6c-66bf51a86c14
                  type: guests
                  links:
                    self: /guests/5c12333e-62ac-4640-af6c-66bf51a86c14
                  attributes:
                    email: john@email.com
                    first-name: John
                    last-name: Smith
                    birthday: null
                    phone: "127834563"
                    phone-country-code: FR
                    phone-country-prefix: "33"
                    tags: []
                    general-note: null
                    visit-note: null
    delete:
      tags:
        - businesses
      summary: Delete a guest
      operationId: deleteApiV1BusinessesIdGuestsGuestId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: guest_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Guest
    patch:
      tags:
        - businesses
      summary: Update a guest
      operationId: patchApiV1BusinessesIdGuestsGuestId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: guest_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - guests
                    attributes:
                      type: object
                      properties:
                        email:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        birthday:
                          type: string
                          format: date
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        tags:
                          type: array
                          items:
                            type: string
                        general_note:
                          type: string
                        visit_note:
                          type: string
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Returns updated guest record
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Guest"
              example:
                data:
                  id: 5c12333e-62ac-4640-af6c-66bf51a86c14
                  type: guests
                  links:
                    self: /guests/5c12333e-62ac-4640-af6c-66bf51a86c14
                  attributes:
                    email: john@email.com
                    first-name: John
                    last-name: Smith
                    birthday: null
                    phone: "127834563"
                    phone-country-code: FR
                    phone-country-prefix: "33"
                    tags: []
                    general-note: null
                    visit-note: null
  /api/v1/businesses/{id}/guests/{guest_id}/reservations:
    get:
      tags:
        - businesses
      summary: Return all reservations for given guest for specific business
      operationId: getApiV1BusinessesIdGuestsGuestIdReservations
      parameters:
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: guest_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all reservations for given guest for specific business
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Reservation"
                  meta:
                    $ref: "#/components/schemas/Meta"
              example:
                data:
                  - id: e35ed9c8-756f-45a2-8c28-b02c76d73ffa
                    type: reservations
                    links:
                      self: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa
                    attributes:
                      additional-info: null
                      comment: null
                      date: 2023-09-21T00:00:00.000Z
                      email: john@smith.com
                      from: 43200
                      name: John Smith
                      other-rejection-reason: null
                      party-size: 4
                      phone: "782345678"
                      phone-country-code: CH
                      phone-country-prefix: "41"
                      reject-reason: null
                      state: booked
                      table:
                        id: 1194
                        business_id: 4656
                        number: "2"
                        number_of_seats: 4
                        uuid: 5f6f03f2-d776-4af6-b387-70312759e1d9
                        shape: round
                        rotation: 0
                        position_x: 210
                        position_y: 0
                      guest_id: fb15a9de-3903-43ce-9155-6a063b186c17
                      to: 45900
                      created-at: 2023-09-20T10:07:32.873Z
                    relationships:
                      bookings:
                        links:
                          self: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/relationships/bookings
                          related: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/bookings
                      tables:
                        links:
                          self: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/relationships/tables
                          related: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/tables
                      business:
                        links:
                          self: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/relationships/business
                          related: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/business
                      user:
                        links:
                          self: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/relationships/user
                          related: /reservations/e35ed9c8-756f-45a2-8c28-b02c76d73ffa/user
                meta:
                  total-count: 1
                  total-pages: 1
  /api/v1/businesses/{id}/dashboard/worst_sales:
    get:
      tags:
        - businesses
      summary: Today's worst selling dishes for specific business
      operationId: getApiV1BusinessesIdDashboardWorstSales
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: pictures, dish_option_categories, business, category"
          schema:
            type: string
        - name: comparison
          in: query
          required: true
          schema:
            type: string
            enum:
              - day
              - month
              - quarter
              - year
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Today's worst selling dishes for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/dashboard/revenue_breakdown:
    get:
      tags:
        - businesses
      summary: Return revenue breakdown for dashboard
      operationId: getApiV1BusinessesIdDashboardRevenueBreakdown
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return revenue breakdown for dashboard
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/dashboard/earnings:
    get:
      tags:
        - businesses
      summary: Get business earnings
      description: >-
        Return sum of today's earnings compared to sum of yesterday's earnings
                    and to last month/last 3 months/last year average values for earnings
      operationId: getApiV1BusinessesIdDashboardEarnings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: >-
            Return sum of today's earnings compared to sum of yesterday's
            earnings
                        and to last month/last 3 months/last year average values for earnings
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/dashboard/best_sales:
    get:
      tags:
        - businesses
      summary: Get best sales for a business
      description: Today's best selling dishes for specific business
      operationId: getApiV1BusinessesIdDashboardBestSales
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: pictures, dish_option_categories, business, category"
          schema:
            type: string
        - name: comparison
          in: query
          description: Period of sales comparison
          required: true
          schema:
            type: string
            enum:
              - day
              - month
              - quarter
              - year
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Today's best selling dishes for specific business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/businesses/{id}/dashboard/average_ticket_size:
    get:
      tags:
        - businesses
      summary: Return average ticket size values for dashboard
      operationId: getApiV1BusinessesIdDashboardAverageTicketSize
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return average ticket size values for dashboard
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/cities:
    get:
      tags:
        - cities
      summary: Return all cities fetched from published businesses
      operationId: getApiV1Cities
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all cities fetched from published businesses
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/city_with_countries:
    get:
      tags:
        - city_with_countries
      summary: Return all cities with country fetched from published businesses
      operationId: getApiV1CityWithCountries
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all cities with country fetched from published businesses
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/deliveries/{id}:
    get:
      tags:
        - deliveries
      summary: Return a Delivery
      operationId: getApiV1DeliveriesId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Delivery
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - deliveries
      summary: Delete a Delivery
      operationId: deleteApiV1DeliveriesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Delivery
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - deliveries
      summary: Update a Delivery
      operationId: patchApiV1DeliveriesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - deliveries
                    attributes:
                      type: object
                      properties:
                        code:
                          type: string
                          description: Delivery region code
                        free_from_cents:
                          type: integer
                          description: Delivery is free if order reached this amount
                          format: int32
                        price_cents:
                          type: integer
                          description: Price in cents (currency taken from the business)
                          format: int32
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update a Delivery
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/deliveries:
    post:
      tags:
        - deliveries
      summary: Create a delivery of a business
      operationId: postApiV1Deliveries
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - deliveries
                    attributes:
                      type: object
                      properties:
                        code:
                          type: string
                          description: Delivery region code
                        price_cents:
                          type: integer
                          description: Price in cents (currency taken from the business)
                          format: int32
                        free_from_cents:
                          type: integer
                          description: Delivery is free if order reached this amount
                          format: int32
                      required:
                        - code
                        - price_cents
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a delivery of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/external_service_links:
    post:
      tags:
        - external_service_links
      summary: Create an external service link
      operationId: postApiV1ExternalServiceLinks
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - external_service_links
                    attributes:
                      type: object
                      properties:
                        service_url:
                          type: string
                          description: URL for external service
                      required:
                        - service_url
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                        external_service:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - external_service
                                id:
                                  type: string
                                  description: Related External Service ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create an external service link
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/external_service_links/{id}:
    delete:
      tags:
        - external_service_links
      summary: Delete an external service link
      operationId: deleteApiV1ExternalServiceLinksId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete an external service link
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - external_service_links
      summary: Update an external service link
      operationId: patchApiV1ExternalServiceLinksId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - external_service_links
                    attributes:
                      type: object
                      properties:
                        service_url:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update an external service link
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/external_services/{id}/service_click:
    post:
      tags:
        - external_services
      summary: Registers a click event for external service
      operationId: postApiV1ExternalServicesIdServiceClick
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - external_service_click_events
                    relationships:
                      type: object
                      properties:
                        external_service:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - external_service
                                id:
                                  type: string
                                  description: Related External Service ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Registers a click event for external service
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/external_services:
    get:
      tags:
        - external_services
      summary: Return all external services
      operationId: getApiV1ExternalServices
      parameters:
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all external services
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/external_services/{id}:
    get:
      tags:
        - external_services
      summary: Return an external service
      operationId: getApiV1ExternalServicesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return an external service
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/groups:
    get:
      tags:
        - groups
      summary: Return all Groups
      operationId: getApiV1Groups
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: businesses"
          schema:
            type: string
        - name: filter[parent_group]
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all Groups
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/groups/{id}:
    get:
      tags:
        - groups
      summary: Return a Group
      operationId: getApiV1GroupsId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: businesses"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Group
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/groups/{id}/businesses:
    get:
      tags:
        - groups
      summary: Return published businesses for specific group
      operationId: getApiV1GroupsIdBusinesses
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, groups, menus, open_periods, order_periods,
            orders, partners, pictures, products, reviews, exclusive_suppliers"
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return published businesses for specific group
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/intelligence_notifications:
    get:
      tags:
        - intelligence_notifications
      summary: Returns notifications for given Business
      operationId: getApiV1IntelligenceNotifications
      parameters:
        - name: business_uuid
          in: query
          description: Related Business UUID
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[notification_type]
          in: query
          schema:
            type: string
            enum:
              - tips
              - promotion
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                filter[country_codes]:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Returns notifications for given Business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/members:
    post:
      tags:
        - members
      summary: Create a member of a business
      operationId: postApiV1Members
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - members
                    attributes:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Email address
                        role:
                          type: string
                          description: Role in business
                        business_manager:
                          description: Allow member to manage business
                      required:
                        - email
                        - role
                        - business_manager
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a member of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/members/reject:
    patch:
      tags:
        - members
      summary: Reject a member of a business
      operationId: patchApiV1MembersReject
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - members
                    attributes:
                      type: object
                      properties:
                        auth_token:
                          type: string
                      required:
                        - auth_token
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Reject a member of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/members/accept:
    patch:
      tags:
        - members
      summary: Accept a member of a business
      operationId: patchApiV1MembersAccept
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - members
                    attributes:
                      type: object
                      properties:
                        auth_token:
                          type: string
                        terms_agreement:
                          description: Terms & Conditions agreement
                      required:
                        - auth_token
                        - terms_agreement
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Accept a member of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/members/{id}:
    get:
      tags:
        - members
      summary: Return a Member
      operationId: getApiV1MembersId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business, user"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Member
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - members
      summary: Delete a Member
      operationId: deleteApiV1MembersId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Member
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - members
      summary: Update a member
      operationId: patchApiV1MembersId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - members
                    attributes:
                      type: object
                      properties:
                        role:
                          type: string
                        business_manager:
                          description: Allow member to manage business
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update a member
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/notifications/{id}:
    get:
      tags:
        - notifications
      summary: Return a notification
      operationId: getApiV1NotificationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a notification
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/notifications/{id}/mark_as_read:
    patch:
      tags:
        - notifications
      summary: Mark a notification as read
      operationId: patchApiV1NotificationsIdMarkAsRead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/open_periods:
    post:
      tags:
        - open_periods
      summary: Create an open period for a business
      operationId: postApiV1OpenPeriods
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - open_periods
                    attributes:
                      type: object
                      properties:
                        opened_from:
                          type: string
                        opened_to:
                          type: string
                        weekday:
                          type: string
                        status:
                          type: string
                          enum:
                            - open
                            - close
                        location:
                          type: string
                      required:
                        - opened_from
                        - opened_to
                        - weekday
                        - status
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create an open period for a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/open_periods/{id}:
    delete:
      tags:
        - open_periods
      summary: Delete an OpenPeriod
      operationId: deleteApiV1OpenPeriodsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete an OpenPeriod
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - open_periods
      summary: Update open period
      operationId: patchApiV1OpenPeriodsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - open_periods
                    attributes:
                      type: object
                      properties:
                        location:
                          type: string
                        opened_from:
                          type: string
                        opened_to:
                          type: string
                        weekday:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update open period
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/order_periods:
    post:
      tags:
        - order_periods
      summary: Create an order period for a business
      operationId: postApiV1OrderPeriods
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - order_periods
                    attributes:
                      type: object
                      properties:
                        opened_from:
                          type: string
                        opened_to:
                          type: string
                        weekday:
                          type: string
                      required:
                        - opened_from
                        - opened_to
                        - weekday
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create an order period for a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/order_periods/{id}:
    delete:
      tags:
        - order_periods
      summary: Delete an OrderPeriod
      operationId: deleteApiV1OrderPeriodsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete an OrderPeriod
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - order_periods
      summary: Update open period
      operationId: patchApiV1OrderPeriodsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - order_periods
                    attributes:
                      type: object
                      properties:
                        opened_from:
                          type: string
                        opened_to:
                          type: string
                        weekday:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update open period
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/orders:
    post:
      tags:
        - orders
      summary: Create a order of a business
      operationId: postApiV1Orders
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - orders
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a order of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/orders/{id}:
    get:
      tags:
        - orders
      summary: Return a Order
      operationId: getApiV1OrdersId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, elements, business"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Order
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - orders
      summary: Delete a Order
      operationId: deleteApiV1OrdersId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Order
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - orders
      summary: Update an Order
      operationId: patchApiV1OrdersId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - orders
                    attributes:
                      type: object
                      properties:
                        delivery_id:
                          type: string
                          description: Delivery UUID
                        notes: {}
                        pickup_at_business: {}
                        shipping_cost_cents:
                          type: integer
                          format: int32
                        shipping_cost_for_business_cents:
                          type: integer
                          format: int32
                        shipping_cost_for_customer_cents:
                          type: integer
                          format: int32
                        state:
                          type: string
                        time_wish:
                          type: string
                        user_email:
                          type: string
                        user_phone:
                          type: string
                        user_phone_country_code:
                          type: string
                        user_phone_country_prefix:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update an Order
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/orders/{id}/reject:
    patch:
      tags:
        - orders
      summary: Reject an Order
      operationId: patchApiV1OrdersIdReject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - orders
                    attributes:
                      type: object
                      properties:
                        reject_reason:
                          type: string
                          enum:
                            - other
                            - dishes_unavailable
                            - kitchen_full
                            - no_delivery_person
                            - almost_closing_time
                        other_rejection_reason:
                          type: string
                          description: Written reason not fitting to other categories
                        unavailable_elements:
                          type: string
                          description: Unavailable elements UUIDs delimited by comma
                      required:
                        - reject_reason
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Reject an Order
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/orders/{id}/elements:
    get:
      tags:
        - orders
      summary: Return all elements for specific order
      operationId: getApiV1OrdersIdElements
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: element_options"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all elements for specific order
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/orders/{id}/orkestro:
    get:
      tags:
        - orders
      summary: Return an Orkestro Order
      operationId: getApiV1OrdersIdOrkestro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return an Orkestro Order
          content:
            application/vnd.api+json:
              schema: {}
    post:
      tags:
        - orders
      summary: Create an Orkestro Order
      operationId: postApiV1OrdersIdOrkestro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - orders
                  required:
                    - id
                    - type
        required: true
      responses:
        "201":
          description: Create an Orkestro Order
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partners:
    get:
      tags:
        - partners
      description:
        Return all Partners with Partner Integration and preference status
        for given Business
      operationId: getApiV1Partners
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: users, partner_integrations"
          schema:
            type: string
        - name: filter[preferred]
          in: query
          schema: {}
        - name: filter[active]
          in: query
          schema: {}
        - name: business_uuid
          in: query
          description: Related Business UUID
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Name search query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                filter[categories]:
                  type: array
                  items:
                    type: string
                filter[excluded_categories]:
                  type: array
                  items:
                    type: string
                filter[wholesaler_categories]:
                  type: array
                  items:
                    type: string
                filter[country_codes]:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description:
            Return all Partners with Partner Integration and preference status
            for given Business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partners/wholesalers:
    get:
      tags:
        - partners
      summary: Return all Partners with wholesaler category
      operationId: getApiV1PartnersWholesalers
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: users, partner_integrations"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all Partners with wholesaler category
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partners/available:
    get:
      tags:
        - partners
      summary: Return all active Partners with status available and coming soon
      operationId: getApiV1PartnersAvailable
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: users, partner_integrations"
          schema:
            type: string
        - name: search
          in: query
          description: Name search query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                filter[categories]:
                  type: array
                  items:
                    type: string
                filter[status]:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Return all active Partners with status available and coming soon
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partners/{id}/disconnect:
    delete:
      tags:
        - partners
      summary: Disconnects the user from the partner.
      operationId: deleteApiV1PartnersIdDisconnect
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Disconnects the user from the partner.
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partners/{id}/connect:
    patch:
      tags:
        - partners
      summary: Link the user to the partner.
      operationId: patchApiV1PartnersIdConnect
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Link the user to the partner.
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partners/{id}:
    get:
      tags:
        - partners
      summary: Return a Partner
      operationId: getApiV1PartnersId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: users, partner_integrations"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Partner
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partners/{id}/click_event:
    post:
      tags:
        - partners
      summary: Creates a click event for partner
      operationId: postApiV1PartnersIdClickEvent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - partner_click_events
                    attributes:
                      type: object
                      properties:
                        event_type:
                          type: string
                          enum:
                            - WEBSITE
                            - VIDEO
                      required:
                        - event_type
                    relationships:
                      type: object
                      properties:
                        partner:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - partner
                                id:
                                  type: string
                                  description: Related Partner ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Creates a click event for partner
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/disconnect:
    delete:
      tags:
        - partner_integrations
      summary: Delete a partner integration with a business
      operationId: deleteApiV1PartnerIntegrationsDisconnect
      parameters:
        - name: data[type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - partner_integrations
        - name: data[relationships][business][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - business
        - name: data[relationships][business][data][id]
          in: query
          description: Related Business ID
          required: true
          schema:
            type: string
        - name: data[relationships][partner][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - partner
        - name: data[relationships][partner][data][id]
          in: query
          description: Related Partner ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a partner integration with a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/connect:
    post:
      tags:
        - partner_integrations
      summary: Create a partner integration with a business
      operationId: postApiV1PartnerIntegrationsConnect
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - partner_integrations
                    attributes:
                      type: object
                      properties:
                        integration_login:
                          type: string
                          description: integration credentials - login
                        integration_password:
                          type: string
                          description: integration credentials - password
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                        partner:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - partner
                                id:
                                  type: string
                                  description: Related Partner ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a partner integration with a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/orkestro/disconnect:
    delete:
      tags:
        - partner_integrations
      summary: Delete a Orkestro partner integration for a given business.
      operationId: deleteApiV1PartnerIntegrationsOrkestroDisconnect
      parameters:
        - name: data[type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - partner_integrations
        - name: data[relationships][business][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - business
        - name: data[relationships][business][data][id]
          in: query
          description: Related Business ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a Orkestro partner integration for a given business.
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/orkestro/connect:
    post:
      tags:
        - partner_integrations
      summary: Create Orkestro partner integration with a business
      operationId: postApiV1PartnerIntegrationsOrkestroConnect
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - partner_integrations
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create Orkestro partner integration with a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/uber_eats/download_menu:
    post:
      tags:
        - partner_integrations
      summary: Download Menu from Uber Eats
      operationId: postApiV1PartnerIntegrationsUberEatsDownloadMenu
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - partner_integrations
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business UUID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/uber_eats/upload_menu:
    post:
      tags:
        - partner_integrations
      summary: Upload Menu to Uber Eats
      operationId: postApiV1PartnerIntegrationsUberEatsUploadMenu
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - partner_integrations
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business UUID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/uber_eats/disconnect:
    delete:
      tags:
        - partner_integrations
      summary: Delete Uber Eats partner integration for a given business.
      operationId: deleteApiV1PartnerIntegrationsUberEatsDisconnect
      parameters:
        - name: data[type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - partner_integrations
        - name: data[relationships][business][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - business
        - name: data[relationships][business][data][id]
          in: query
          description: Related Business UUID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete Uber Eats partner integration for a given business.
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/partner_integrations/uber_eats/connect:
    post:
      tags:
        - partner_integrations
      summary: Create Uber Eats partner integration with a business
      operationId: postApiV1PartnerIntegrationsUberEatsConnect
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - partner_integrations
                    attributes:
                      type: object
                      properties:
                        store_id:
                          type: string
                          description: eats_store_id from Uber Eats
                      required:
                        - store_id
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business UUID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create Uber Eats partner integration with a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/pictures:
    post:
      tags:
        - pictures
      summary: Create a photo for business or review or dish
      operationId: postApiV1Pictures
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - pictures
                    attributes:
                      type: object
                      properties:
                        parent_resource:
                          type: string
                          description:
                            "Valid values: business, dish, point, chapter, blog_post,
                            food_review, service_review, atmosphere_review,
                            cleanliness_review, concept_review, pricing_review"
                        photo:
                          type: string
                          format: binary
                      required:
                        - parent_resource
                        - photo
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related business ID
                        review:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - review
                                id:
                                  type: string
                                  description: Related review ID
                        dish:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - dish
                                id:
                                  type: string
                                  description: Related dish ID
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a photo for business or review or dish
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/pictures/{id}:
    delete:
      tags:
        - pictures
      summary: Delete a Picture
      operationId: deleteApiV1PicturesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Picture
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/preferred_partners:
    post:
      tags:
        - preferred_partners
      summary: Create a preferred partner for business
      operationId: postApiV1PreferredPartners
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - partners
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                        partner:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - partner
                                id:
                                  type: string
                                  description: Related Partner ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a preferred partner for business
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - preferred_partners
      summary: Delete a preferred partner for business
      operationId: deleteApiV1PreferredPartners
      parameters:
        - name: data[type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - partners
        - name: data[relationships][business][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - business
        - name: data[relationships][business][data][id]
          in: query
          description: Related Business ID
          required: true
          schema:
            type: string
        - name: data[relationships][partner][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - partner
        - name: data[relationships][partner][data][id]
          in: query
          description: Related Partner ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a preferred partner for business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/privatisations/reject:
    patch:
      tags:
        - privatisations
      summary: Reject a privatisation offer
      operationId: patchApiV1PrivatisationsReject
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - privatisations
                    attributes:
                      type: object
                      properties:
                        auth_token:
                          type: string
                      required:
                        - auth_token
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Reject a privatisation offer
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/privatisations/accept:
    patch:
      tags:
        - privatisations
      summary: Accept a privatisation offer
      operationId: patchApiV1PrivatisationsAccept
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - privatisations
                    attributes:
                      type: object
                      properties:
                        auth_token:
                          type: string
                      required:
                        - auth_token
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Accept a privatisation offer
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/privatisations:
    post:
      tags:
        - privatisations
      summary: Create a privatisation of a business
      operationId: postApiV1Privatisations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - privatisations
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        from:
                          type: integer
                          format: int32
                        to:
                          type: integer
                          format: int32
                        date:
                          type: string
                          format: date
                        number_of_servings:
                          type: integer
                          format: int32
                        email:
                          type: string
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        specifications:
                          type: string
                        user_name:
                          type: string
                        type_of_event:
                          type: string
                        chef_attendance: {}
                        company_name:
                          type: string
                        corporate_event: {}
                        number_of_waiters:
                          type: integer
                          format: int32
                        marketing_feedback:
                          type: string
                        consent_gdpr: {}
                        menu:
                          type: string
                          format: binary
                      required:
                        - name
                        - from
                        - to
                        - date
                        - number_of_servings
                        - email
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                        user:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - user
                                id:
                                  type: string
                                  description: Related User ID
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a privatisation of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/privatisations/{id}/send:
    patch:
      tags:
        - privatisations
      summary: Send email with a privatisation offer
      operationId: patchApiV1PrivatisationsIdSend
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/privatisations/{id}:
    get:
      tags:
        - privatisations
      summary: Return a Privatisation
      operationId: getApiV1PrivatisationsId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: business, user"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Privatisation
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - privatisations
      summary: Delete a Privatisation
      operationId: deleteApiV1PrivatisationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Privatisation
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - privatisations
      summary: Update privatisation
      operationId: patchApiV1PrivatisationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - privatisations
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        date:
                          type: string
                          format: date
                        from:
                          type: integer
                          format: int32
                        to:
                          type: integer
                          format: int32
                        type_of_event:
                          type: string
                        corporate_event: {}
                        company_name:
                          type: string
                        number_of_servings:
                          type: integer
                          format: int32
                        specifications:
                          type: string
                        menu:
                          type: string
                          format: binary
                        chef_attendance: {}
                        number_of_waiters:
                          type: integer
                          format: int32
                        price_cents:
                          type: integer
                          format: int32
                        currency:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update privatisation
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/products:
    post:
      tags:
        - products
      summary: Create a must-eat (product) for business or review
      operationId: postApiV1Products
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - products
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        photo:
                          type: string
                          format: binary
                      required:
                        - name
                        - photo
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related business ID
                        review:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - review
                                id:
                                  type: string
                                  description: Related review ID
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a must-eat (product) for business or review
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/products/{id}:
    delete:
      tags:
        - products
      summary: Delete a Product
      operationId: deleteApiV1ProductsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Product
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - products
      summary: Update product
      operationId: patchApiV1ProductsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - products
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        photo:
                          type: string
                          format: binary
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update product
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/reservations:
    post:
      tags:
        - reservations
      summary: Create a reservation of a business
      operationId: postApiV1Reservations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - reservations
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        date:
                          type: string
                          format: date
                        from:
                          type: integer
                          format: int32
                        to:
                          type: integer
                          format: int32
                        party_size:
                          type: integer
                          format: int32
                        email:
                          type: string
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        guest_id:
                          type: string
                        tables:
                          type: object
                          properties:
                            id:
                              type: array
                              items:
                                type: string
                            seats_taken:
                              type: array
                              items:
                                type: integer
                                format: int32
                          required:
                            - id
                            - seats_taken
                        comment:
                          type: string
                      required:
                        - name
                        - date
                        - from
                        - to
                        - party_size
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                        user:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - user
                                id:
                                  type: string
                                  description: Related User ID
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a reservation of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/reservations/available_seats:
    get:
      tags:
        - reservations
      summary: Check for available seats for a particular hour in a restaurant
      operationId: getApiV1ReservationsAvailableSeats
      parameters:
        - name: data[type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - reservations
        - name: data[attributes][date]
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: data[attributes][time]
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: data[relationships][business][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - business
        - name: data[relationships][business][data][id]
          in: query
          description: Related Business ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Check for available seats for a particular hour in a restaurant
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/reservations/available_hours:
    get:
      tags:
        - reservations
      summary: Check for available hours in a restaurant
      operationId: getApiV1ReservationsAvailableHours
      parameters:
        - name: data[type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - reservations
        - name: data[attributes][date]
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: data[relationships][business][data][type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - business
        - name: data[relationships][business][data][id]
          in: query
          description: Related Business ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Check for available hours in a restaurant
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/reservations/{id}:
    get:
      tags:
        - reservations
      summary: Return a Reservation
      operationId: getApiV1ReservationsId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: bookings, tables, business, user"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a Reservation
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - reservations
      summary: Delete a Reservation
      operationId: deleteApiV1ReservationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Reservation
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - reservations
      summary: Update reservation
      operationId: patchApiV1ReservationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - reservations
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                        date:
                          type: string
                          format: date
                        from:
                          type: integer
                          format: int32
                        to:
                          type: integer
                          format: int32
                        party_size:
                          type: integer
                          format: int32
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        guest_id:
                          type: string
                        tables:
                          type: object
                          properties:
                            id:
                              type: array
                              items:
                                type: string
                            seats_taken:
                              type: array
                              items:
                                type: integer
                                format: int32
                          required:
                            - id
                            - seats_taken
                        comment:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update reservation
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/reservations/{id}/reject:
    patch:
      tags:
        - reservations
      summary: Reject a reservation
      operationId: patchApiV1ReservationsIdReject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - reservations
                    attributes:
                      type: object
                      properties:
                        reject_reason:
                          type: string
                          enum:
                            - other
                            - restaurant_full
                            - almost_closing_time
                        other_rejection_reason:
                          type: string
                          description: Written reason not fitting to other categories
                      required:
                        - reject_reason
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Reject a reservation
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/reservations/{id}/cancel:
    patch:
      tags:
        - reservations
      description:
        Cancel a reservation - erase all tables from reservation and delete
        bookings
      operationId: patchApiV1ReservationsIdCancel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - reservations
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description:
            Cancel a reservation - erase all tables from reservation and delete
            bookings
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/special_open_periods:
    post:
      tags:
        - special_open_periods
      summary: Create a special open period for a business
      operationId: postApiV1SpecialOpenPeriods
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - special_open_periods
                    attributes:
                      type: object
                      properties:
                        opened_from:
                          type: string
                        opened_to:
                          type: string
                        status:
                          type: string
                          enum:
                            - open
                            - close
                      required:
                        - status
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a special open period for a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/special_open_periods/{id}:
    delete:
      tags:
        - special_open_periods
      summary: Delete an SpecialOpenPeriod
      operationId: deleteApiV1SpecialOpenPeriodsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a SpecialOpenPeriod
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - special_open_periods
      summary: Update special open period
      operationId: patchApiV1SpecialOpenPeriodsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - special_open_periods
                    attributes:
                      type: object
                      properties:
                        opened_from:
                          type: string
                        opened_to:
                          type: string
                        start_date:
                          type: string
                        end_date:
                          type: string
                        status:
                          type: string
                          enum:
                            - open
                            - close
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update special open period
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_categories:
    get:
      tags:
        - supplier_categories
      summary: Return all available Suppliers Categories
      operationId: getApiV1SupplierCategories
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: suppliers"
          schema:
            type: string
        - name: locale
          in: query
          description: Current locale of your app
          schema:
            type: string
            enum:
              - ar
              - de
              - en
              - es
              - fr
              - it
              - ms
              - pt
              - ru
              - zh-CN
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all available Suppliers Categories
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_elements:
    post:
      tags:
        - supplier_elements
      summary: Create a supplier element of a supplier order
      operationId: postApiV1SupplierElements
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - supplier_elements
                    attributes:
                      type: object
                      properties:
                        quantity:
                          type: integer
                          description: Amount of given supplier product
                          format: int32
                      required:
                        - quantity
                    relationships:
                      type: object
                      properties:
                        supplier_order:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - supplier_order
                                id:
                                  type: string
                                  description: Related SupplierOrder ID
                              required:
                                - type
                                - id
                        supplier_product:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - supplier_product
                                id:
                                  type: string
                                  description: Related SupplierProduct ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a supplier element of a supplier order
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_orders:
    post:
      tags:
        - supplier_orders
      summary: Create a Supplier Order for current business
      operationId: postApiV1SupplierOrders
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - supplier_orders
                    attributes:
                      type: object
                      properties:
                        desired_delivery_date:
                          type: string
                          format: date
                        comment:
                          type: string
                      required:
                        - desired_delivery_date
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                        supplier:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - supplier
                                id:
                                  type: string
                                  description: Related Supplier ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a Supplier Order for current business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_orders/{id}:
    get:
      tags:
        - supplier_orders
      summary: Returns a Supplier Order
      operationId: getApiV1SupplierOrders
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: supplier_elements, supplier_products, supplier"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Returns a Supplier Order
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_orders/{id}/send_created_email:
    get:
      tags:
        - supplier_orders
      summary:
        Sends email notification about order creation to the supplier email
        address
      operationId: getApiV1SupplierOrdersIdSendCreatedEmail
      parameters:
        - name: locale
          in: query
          description: Current locale of PowerAPI app
          schema:
            type: string
            enum:
              - ar
              - de
              - en
              - es
              - fr
              - it
              - ms
              - pt
              - ru
              - zh-CN
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description:
            Sends email notification about order creation to the supplier email
            address
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_catalogs:
    post:
      tags:
        - supplier_catalogs
      summary: Create a supplier catalog for current business
      operationId: postApiV1SupplierCatalogs
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - supplier_catalogs
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        clone_default:
                          type: boolean
                          enum:
                            - true
                            - false
                      required:
                        - name
                        - clone_default
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related Business ID
                              required:
                                - type
                                - id
                        supplier:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - supplier
                                id:
                                  type: string
                                  description: Related Supplier ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a Supplier Catalog for current business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_catalogs/{id}:
    patch:
      tags:
        - supplier_catalogs
      summary: Update a Supplier Catalog
      operationId: patchApiV1SupplierCatalogsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - supplier_catalogs
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update a Supplier Catalog
          content:
            application/vnd.api+json:
              schema: {}
    get:
      tags:
        - supplier_catalogs
      summary: Returns a Supplier Catalog
      operationId: getApiV1SupplierCatalogsId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: supplier_products"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Returns a Supplier Catalog
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - supplier_catalogs
      summary: Delete a Supplier Catalog
      operationId: deleteApiV1SupplierCatalogsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Supplier Catalog
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_product_categories:
    get:
      tags:
        - supplier_product_categories
      summary: Return all available Suppliers Product Categories
      operationId: getApiV1SupplierProductCategories
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: sub_categories"
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all available Suppliers Product Categories
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_product_subcategories:
    get:
      tags:
        - supplier_product_subcategories
      summary: Return all available Suppliers Product Subcategories
      operationId: getApiV1SupplierProductSubcategories
      parameters:
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all available Suppliers Product Subcategories
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_products:
    get:
      tags:
        - supplier_products
      summary: Return all available Suppliers Products
      operationId: getApiV1SupplierProducts
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                filter[product_names]:
                  type: array
                  items:
                    type: string
                filter[supplier_names]:
                  type: array
                  items:
                    type: string
                filter[category_names]:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Return all available Suppliers Products
          content:
            application/vnd.api+json:
              schema: {}
    post:
      tags:
        - supplier_products
      summary: Create a product of a supplier
      operationId: postApiV1SupplierProducts
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - supplier_products
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        price_per_unit_cents:
                          type: integer
                          description: Price in cents
                          format: int32
                        is_available: {}
                        sku_ref:
                          type: string
                        description:
                          type: string
                        units:
                          type: string
                        image:
                          type: string
                          format: binary
                        selling_price_cents:
                          type: integer
                          format: int32
                        product_category:
                          type: string
                          description: Product Category name
                        sub_categories:
                          type: string
                          description: Subcategories separated with comma
                      required:
                        - name
                        - price_per_unit_cents
                        - product_category
                    relationships:
                      type: object
                      properties:
                        supplier:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - supplier
                                id:
                                  type: string
                                  description: Related Supplier ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a product of a supplier
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_products/{id}:
    patch:
      tags:
        - supplier_products
      summary: Update a product from default catalog of a supplier
      operationId: patchApiV1SupplierProductsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - supplier_products
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        price_per_unit_cents:
                          type: integer
                          description: Price in cents
                          format: int32
                        is_available: {}
                        sku_ref:
                          type: string
                        description:
                          type: string
                        units:
                          type: string
                        image:
                          type: string
                          format: binary
                        selling_price_cents:
                          type: integer
                          format: int32
                        sub_categories:
                          type: string
                          description: Subcategories separated with comma
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update a product from default catalog of a supplier
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/supplier_products/{id}/custom:
    patch:
      tags:
        - supplier_products
      summary: Update a product from custom catalog of a supplier
      operationId: patchApiV1SupplierProductsIdCustom
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - supplier_products
                    attributes:
                      type: object
                      properties:
                        price_per_unit_cents:
                          type: integer
                          description: Price in cents
                          format: int32
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Update a product from custom catalog of a supplier
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/suppliers:
    get:
      tags:
        - suppliers
      summary: Return all active suppliers
      operationId: getApiV1Suppliers
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all active suppliers
          content:
            application/vnd.api+json:
              schema: {}
    post:
      tags:
        - suppliers
      summary: Create a Supplier
      operationId: postApiV1Suppliers
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - suppliers
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        logo:
                          type: string
                        invoice_emails:
                          type: array
                          items:
                            type: string
                        active:
                          type: boolean
                        average_delivery:
                          type: string
                        cities:
                          type: array
                          items:
                            type: string
                        country_codes:
                          type: array
                          items:
                            type: string
                        currency:
                          type: string
                        description:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                        vat_number:
                          type: string
                      required:
                        - name
                        - logo
                        - invoice_emails
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a Supplier
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/suppliers/{id}:
    delete:
      tags:
        - suppliers
      summary: Delete a Supplier
      operationId: deleteApiV1SuppliersId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Supplier
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - suppliers
      summary: Update a Supplier
      operationId: patchApiV1SupplierId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - suppliers
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                        active:
                          type: boolean
                        average_delivery:
                          type: string
                        cities:
                          type: array
                          items:
                            type: string
                        country_codes:
                          type: array
                          items:
                            type: string
                        currency:
                          type: string
                        description:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                        vat_number:
                          type: string
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update a Supplier
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/suppliers/{id}/supplier_orders:
    get:
      tags:
        - suppliers
      summary: Return all supplier orders for specific supplier
      operationId: getApiV1SuppliersIdSupplierOrders
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: pictures, supplier_elements, supplier_products,
            supplier"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all supplier orders for specific supplier
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/suppliers/{id}/supplier_catalogs:
    get:
      tags:
        - suppliers
      summary: Return all supplier catalogs for specific supplier
      operationId: getApiV1SuppliersIdSupplierCatalogs
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: pictures, supplier_products"
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return all supplier catalogs for specific supplier
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/tables:
    post:
      tags:
        - tables
      summary: Create a table of a business
      operationId: postApiV1Tables
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - tables
                    attributes:
                      type: object
                      properties:
                        number:
                          type: string
                        number_of_seats:
                          type: integer
                          format: int32
                        shape:
                          type: string
                          description: The shape of the table
                        rotation:
                          type: string
                          description: The rotation option of the table
                        coord_x:
                          type: integer
                          description: X coordinate of the table
                          format: int32
                        coord_y:
                          type: integer
                          description: Y coordinate of the table
                          format: int32
                        position_x:
                          type: integer
                          description: X coordinate of the table
                          format: int32
                        position_y:
                          type: integer
                          description: Y coordinate of the table
                          format: int32
                      required:
                        - number
                        - number_of_seats
                    relationships:
                      type: object
                      properties:
                        business:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - business
                                id:
                                  type: string
                                  description: Related business ID
                              required:
                                - type
                                - id
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Create a table of a business
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/tables/{id}:
    delete:
      tags:
        - tables
      summary: Delete a Table
      operationId: deleteApiV1TablesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Delete a Table
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - tables
      summary: Update table
      operationId: patchApiV1TablesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tables
                    attributes:
                      type: object
                      properties:
                        number:
                          type: string
                        number_of_seats:
                          type: integer
                          format: int32
                        shape:
                          type: string
                        rotation:
                          type: integer
                          format: int32
                        coord_x:
                          type: integer
                          description: X coordinate of the table
                          format: int32
                        coord_y:
                          type: integer
                          description: Y coordinate of the table
                          format: int32
                        position_x:
                          type: integer
                          description: X coordinate of the table
                          format: int32
                        position_y:
                          type: integer
                          description: Y coordinate of the table
                          format: int32
                  required:
                    - id
                    - type
        required: true
      responses:
        "200":
          description: Update table
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/delete_account:
    delete:
      tags:
        - users
      summary: Delete current user
      description: Request to delete account. Business stays available
      operationId: deleteApiV1UsersMeDeleteAccount
      responses:
        "204":
          description: Request to delete account. Business stays available
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me:
    get:
      tags:
        - users
      summary: Get current user
      description: Return User for current token
      operationId: getApiV1UsersMe
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: specializations"
          schema:
            type: string
      responses:
        "200":
          description: Return User for current token
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
              example:
                data:
                  id: 583c82ab-04c7-4ce3-91f3-aceaa12a020e
                  type: users
                  links:
                    self: /users/583c82ab-04c7-4ce3-91f3-aceaa12a020e
                  attributes:
                    accepted-food-detective: false
                    allergies: peanuts, cats
                    avatar:
                      url: https://foodetective-staging-backend-data.s3.amazonaws.com/uploads/user/avatar/583c82ab-04c7-4ce3-91f3-aceaa12a020e/af4f0d34-79db-49aa-9904-fd6cf88eb234.jpeg
                    birthday: 2000-06-10T00:00:00.000Z
                    city: Berlin
                    confirmed: true
                    connected-to-partoo: true
                    country: Germany
                    country-code: DE
                    deleted: false
                    detected-language: null
                    email: bo@example.com
                    favourite-drink: beer & whisky
                    favourite-food: burger
                    food-detective-status: not_requested
                    gender: male
                    language: en
                    monthly-bars-budget: 100
                    monthly-delivery-takeaway-budget: 200
                    monthly-restaurants-budget: 545
                    name: BOs Example 2
                    partoo-user-id: 64397c6867c3c6d052075cdc
                    phone: "8005555535"
                    phone-country-code: GB
                    phone-country-prefix: "44"
                    post-code: "10965"
                    recovery-email: ddd@ddd.pl
                    region: null
                    region-code: DE-BE
                    registered-via-oauth: false
                    reviews-count: 0
                    role: business_member
                    sign-in-count: 4496
                    street: Columbiadamm
                    street-number: "124"
                    subscription-not-terminated: false
                    unconfirmed-email: bo@exampl.com
                  relationships:
                    specializations:
                      links:
                        self: /users/583c82ab-04c7-4ce3-91f3-aceaa12a020e/relationships/specializations
                        related: /users/583c82ab-04c7-4ce3-91f3-aceaa12a020e/specializations
    delete:
      tags:
        - users
      summary: Delete current user
      description: Delete user's account
      operationId: deleteApiV1UsersMe
      responses:
        "204":
          description: Delete user's account
          content:
            application/vnd.api+json:
              schema: {}
    patch:
      tags:
        - users
      summary: Update current user
      description: Update current user details
      operationId: patchApiV1UsersMe
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        allergies:
                          type: string
                        avatar:
                          type: string
                          format: binary
                        bio:
                          type: string
                        birthday:
                          type: string
                          format: date
                        city:
                          type: string
                        country_code:
                          type: string
                        cover:
                          type: string
                          format: binary
                        cv:
                          type: string
                          format: binary
                        email:
                          type: string
                        experience:
                          type: string
                        facebook_url:
                          type: string
                        favourite_drink:
                          type: string
                        favourite_food:
                          type: string
                        gender:
                          type: string
                          description: "Valid values: male, female, other"
                        instagram_url:
                          type: string
                        linkedin_url:
                          type: string
                        monthly_bars_budget:
                          type: integer
                          format: int32
                        monthly_delivery_takeaway_budget:
                          type: integer
                          format: int32
                        monthly_restaurants_budget:
                          type: integer
                          format: int32
                        name:
                          type: string
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        post_code:
                          type: string
                        public_email:
                          type: string
                        recovery_email:
                          type: string
                        region_code:
                          type: string
                        short_description:
                          type: string
                        specializations_list:
                          type: string
                          description: Slugs of specializations delimited by comma
                        street:
                          type: string
                        street_number:
                          type: string
                        twitter_url:
                          type: string
                        website_url:
                          type: string
                        language:
                          type: string
                          enum:
                            - en
                            - de
                            - fr
                            - es
                            - it
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Update current user details
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/reset_password:
    patch:
      tags:
        - users
      summary: Reset user's password
      operationId: patchApiV1UsersMeResetPassword
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        current_password:
                          type: string
                          description: User's current password
                        password:
                          type: string
                          description: New password
                        password_confirmation:
                          type: string
                          description: New password confirmation
                      required:
                        - current_password
                        - password
                        - password_confirmation
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Reset user's password
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/become_a_food_detective:
    patch:
      tags:
        - users
      summary: Request to become Food Detective
      operationId: patchApiV1UsersMeBecomeAFoodDetective
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        city:
                          type: string
                        country_code:
                          type: string
                        cv:
                          type: string
                          format: binary
                        name:
                          type: string
                        phone:
                          type: string
                        phone_country_code:
                          type: string
                        phone_country_prefix:
                          type: string
                        post_code:
                          type: string
                        region_code:
                          type: string
                        street:
                          type: string
                        street_number:
                          type: string
                  required:
                    - type
        required: true
      responses:
        "200":
          description: Request to become Food Detective
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/authenticate_pusher:
    post:
      tags:
        - users
      summary: Authenticate Pusher for the user
      operationId: postApiV1UsersMeAuthenticatePusher
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              required:
                - authentication_for
                - record_id
                - socket_id
                - user_channel
              properties:
                authentication_for:
                  type: string
                  description: For what resource you want to authenticate the user
                  enum:
                    - business
                    - user
                user_channel:
                  type: string
                  enum:
                    - conversations
                    - notifications
                record_id:
                  type: string
                  description: UUID
                socket_id:
                  type: string
                  description: Socket that the client needs to obtain and send
        required: true
      responses:
        "201":
          description: Authenticate Pusher for the user
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/notifications/mark_all_as_read:
    patch:
      tags:
        - users
      summary: Update all user's notifications as read
      operationId: patchApiV1UsersMeNotificationsMarkAllAsRead
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - notifications
                    attributes:
                      type: object
                      properties:
                        notification_ids:
                          type: array
                          description: IDs of notifications that we want to mark as read
                          items:
                            type: integer
                            format: int32
                  required:
                    - type
        required: true
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/notifications:
    get:
      tags:
        - users
      summary: Return notifications of current user
      operationId: getApiV1UsersMeNotifications
      parameters:
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return notifications of current user
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/businesses:
    get:
      tags:
        - users
      summary: Get users businesses
      description: Return all businesses for currently logged in user
      operationId: getApiV1UsersMeBusinesses
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, groups, menus, open_periods, order_periods,
            orders, partners, pictures, products, reviews, exclusive_suppliers"
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: filter[state]
          in: query
          description: State in which business is currently
          schema:
            type: string
            enum:
              - draft
              - waiting_for_approval
              - rejected
              - published
              - hidden
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all businesses for currently logged in user
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                  - meta
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Business"
                  meta:
                    $ref: "#/components/schemas/Meta"
              example:
                data:
                  - id: 0eb74ac0-c750-4eee-a467-282bdb0e23a4
                    type: businesses
                    links:
                      self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4
                    attributes:
                      allow-pickup: true
                      approved-for-lefood: true
                      auto-accept-orders: false
                      auto-accept-booking: false
                      auto-accept-booking-limit: "2"
                      available-in-lefood: true
                      average-delivery-time: 30
                      average-score: 7.3
                      average-waiting-time: 30
                      bill-url: https://demo.sundayapp.xyz/order/a1731086-274b-3864-86a9-5706a796c799
                      bio:
                        "Le Cinq is a gourmet restaurant in Paris, France, part of the Four Seasons
                        Hotel George V. Le Cinq opened in 2001 to much fanfare
                        and rapidly achieved 1, 2, then 3 Michelin Red Guide
                        stars under the direction of chef Philippe Legendre
                        before being demoted to 2 stars.\r

                        \r

                        Please note: order beyond 3km
                        distance won't receive warm meal"
                      breakfast-service: true
                      brunch-service: true
                      cafe-service: true
                      can-pay-with-cards: true
                      can-pay-with-cash: true
                      can-pay-with-mobile: true
                      city: Paris
                      connected-to-partoo: false
                      contact-with-proper-owner-possible: true
                      country: France
                      country-code: FR
                      currency: EUR
                      delivery-available: true
                      delivery-charge-ref: "1234"
                      delivery-price-participation-ratio: "1.0"
                      delivery-service-type-ref: "2222"
                      delivery-url: null
                      detected-language: en
                      dinner-service: true
                      email: thefooddetective-team@netguru.pl
                      facebook: https://www.facebook.com/power.api/
                      favorite-id: null
                      geolocation-lat: "48.8610643"
                      geolocation-lng: "2.3599261"
                      has-catering: true
                      has-delivery: false
                      has-join-the-queue: true
                      has-online-booking: false
                      has-private-events: true
                      has-reservations: true
                      has-takeaway: false
                      hubrise-catalog-id: 17mxg
                      hubrise-catalog-name: Le cinq (2) - Uber Eat test account
                      instagram: https://www.instagram.com/foodetective.co/
                      live-info: null
                      logo:
                        url: https://foodetective-staging-backend-data.s3.amazonaws.com/uploads/business/logo/0eb74ac0-c750-4eee-a467-282bdb0e23a4/e43529b1-462d-4e97-95fd-03f2e159b9f8.jpeg
                      lunch-service: true
                      main-photo-url: https://foodetective-staging-backend-data.s3.amazonaws.com/uploads/picture/photo/846219ae-bf08-4ba8-b726-b557c3128ae9/8bd57a06-0be5-4527-b4f5-8468ec8255f5.jpeg
                      max-reservation-size: 8
                      menu-synced: false
                      min-amount-for-delivery-cents: 1000
                      min-time-before-reservation: 1800
                      name: Restaurant
                      online-booking-url: null
                      owner-role: Main owner
                      phone: "345345345"
                      phone-country-code: FR
                      phone-country-prefix: "33"
                      pos-partner-integration-exists: true
                      post-code: "75003"
                      price-per-person: 45
                      price-range: 3
                      rating: 7.3
                      region: Paris
                      region-code: FR-75
                      secret-code: null
                      slug: restaurant-10
                      snack-service: true
                      state: published
                      street: Rue Charlot
                      street-number: "5"
                      stripe-currency: EUR
                      stripe-payment-ref: "4321"
                      eat-in-ref: null
                      stripe-user-id: acct_1GkWA1Lj6G4jVdPy
                      tagline: The best restaurant in Paris!
                      takeaway-service-type-ref: "4444"
                      takeaway-url: null
                      time-of-stay: 600
                      time-slots: 3000
                      timezone: Europe/Paris
                      visible-in-lefood: true
                      website: https://www.index.hr/
                      youtube: https://youtu.be/-DVkz4LLu8w
                      settings:
                        orkestro_delivery_confirmation_enabled: true
                        order_business_web_notifications_enabled: true
                        reservation_business_web_notifications_enabled: false
                      partoo-business-id: null
                    relationships:
                      addresses:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/addresses
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/addresses
                      groups:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/groups
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/groups
                      menus:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/menus
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/menus
                      open-periods:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/open-periods
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/open-periods
                      special-open-periods:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/special-open-periods
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/special-open-periods
                      order-periods:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/order-periods
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/order-periods
                      orders:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/orders
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/orders
                      partners:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/partners
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/partners
                      pictures:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/pictures
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/pictures
                      products:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/products
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/products
                      reviews:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/reviews
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/reviews
                      exclusive-suppliers:
                        links:
                          self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/exclusive-suppliers
                          related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/exclusive-suppliers
                meta:
                  total-count: 1
                  total-pages: 1
  /api/v1/users/me/businesses/{id}:
    get:
      tags:
        - users
      summary: Get users business
      description: Return a business of currently logged in user
      operationId: getApiV1UsersMeBusinessesId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: addresses, groups, menus, open_periods, order_periods,
            orders, partners, pictures, products, reviews, exclusive_suppliers"
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a business of currently logged in user
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Business"
              example:
                data:
                  id: 0eb74ac0-c750-4eee-a467-282bdb0e23a4
                  type: businesses
                  links:
                    self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4
                  attributes:
                    allow-pickup: true
                    approved-for-lefood: true
                    auto-accept-orders: false
                    auto-accept-booking: false
                    auto-accept-booking-limit: "0"
                    available-in-lefood: true
                    average-delivery-time: 30
                    average-score: 7.3
                    average-waiting-time: 30
                    bill-url: https://demo.sundayapp.xyz/order/a1731086-274b-3864-86a9-5706a796c799
                    bio:
                      "Le Cinq is a gourmet restaurant in Paris, France, part of the Four Seasons
                      Hotel George V. Le Cinq opened in 2001 to much fanfare and
                      rapidly achieved 1, 2, then 3 Michelin Red Guide stars
                      under the direction of chef Philippe Legendre before being
                      demoted to 2 stars.\r

                      \r

                      Please note: order beyond 3km
                      distance won't receive warm meal"
                    breakfast-service: true
                    brunch-service: true
                    cafe-service: true
                    can-pay-with-cards: true
                    can-pay-with-cash: true
                    can-pay-with-mobile: true
                    city: Paris
                    connected-to-partoo: false
                    contact-with-proper-owner-possible: true
                    country: France
                    country-code: FR
                    currency: null
                    delivery-available: true
                    delivery-charge-ref: "1234"
                    delivery-price-participation-ratio: "1.0"
                    delivery-service-type-ref: "2222"
                    delivery-url: https://delivery.com
                    detected-language: en
                    dinner-service: true
                    email: hello@foodetective.co
                    facebook: https://facebook.com/eab
                    favorite-id: null
                    geolocation-lat: "48.9019071"
                    geolocation-lng: "2.3738375"
                    has-catering: true
                    has-delivery: true
                    has-join-the-queue: true
                    has-online-booking: true
                    has-private-events: true
                    has-reservations: true
                    has-takeaway: true
                    hubrise-catalog-id: 17mxg
                    hubrise-catalog-name: Le cinq (2) - Uber Eat test account
                    instagram: https://www.instagram.com/foodetective.co//
                    live-info: app live info
                    logo:
                      url: https://foodetective-staging-backend-data.s3.amazonaws.com/uploads/business/logo/0eb74ac0-c750-4eee-a467-282bdb0e23a4/8096e66f-5355-4dcc-9c91-536281d92e7c.png
                    lunch-service: true
                    main-photo-url: https://foodetective-staging-backend-data.s3.amazonaws.com/uploads/picture/photo/569f8823-242a-420a-991c-589447eb440c/b6248af5-bef0-4bd2-a161-43983b564d2c.png
                    max-reservation-size: 8
                    menu-synced: false
                    min-amount-for-delivery-cents: 1000
                    min-time-before-reservation: 1800
                    name: Restaurants
                    online-booking-url: https://online.booking.url
                    owner-role: Main owner
                    phone: "345345345"
                    phone-country-code: FR
                    phone-country-prefix: "33"
                    pos-partner-integration-exists: true
                    post-code: "75004"
                    price-per-person: 45
                    price-range: 3
                    rating: 7.3
                    region: Paris
                    region-code: FR-75
                    secret-code: null
                    slug: restaurants
                    snack-service: true
                    state: published
                    street: Rue Charlotteee
                    street-number: "822"
                    stripe-currency: EUR
                    stripe-payment-ref: "4321"
                    eat-in-ref: null
                    stripe-user-id: acct_1GkWA1Lj6G4jVdPy
                    tagline: Testing the best line ever/...
                    takeaway-service-type-ref: "4444"
                    takeaway-url: https://app.test.com
                    time-of-stay: 600
                    time-slots: 1800
                    timezone: Europe/Paris
                    visible-in-lefood: true
                    website: https://www.index.hr
                    youtube: https://youtu.be/-DVkz4LLu8w
                    settings:
                      orkestro_delivery_confirmation_enabled: true
                      order_business_web_notifications_enabled: true
                      reservation_business_web_notifications_enabled: false
                    partoo-business-id: null
                  relationships:
                    addresses:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/addresses
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/addresses
                    groups:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/groups
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/groups
                    menus:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/menus
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/menus
                    open-periods:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/open-periods
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/open-periods
                    special-open-periods:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/special-open-periods
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/special-open-periods
                    order-periods:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/order-periods
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/order-periods
                    orders:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/orders
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/orders
                    partners:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/partners
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/partners
                    pictures:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/pictures
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/pictures
                    products:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/products
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/products
                    reviews:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/reviews
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/reviews
                    exclusive-suppliers:
                      links:
                        self: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/relationships/exclusive-suppliers
                        related: /businesses/0eb74ac0-c750-4eee-a467-282bdb0e23a4/exclusive-suppliers
  /api/v1/users/me/addresses:
    get:
      tags:
        - users
      summary: Return all addresses for currently logged in user
      operationId: getApiV1UsersMeAddresses
      parameters:
        - name: sort
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Page offset to fetch.
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Return all addresses for currently logged in user
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/me/addresses/{id}:
    get:
      tags:
        - users
      summary: Return a address of currently logged in user
      operationId: getApiV1UsersMeAddressesId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a address of currently logged in user
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/delete_by_token:
    delete:
      tags:
        - users
      summary: Delete unconfirmed user's account using delete token from email
      operationId: deleteApiV1UsersDeleteByToken
      parameters:
        - name: data[type]
          in: query
          required: true
          schema:
            type: string
            enum:
              - users
        - name: data[attributes][delete_token]
          in: query
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete unconfirmed user's account using delete token from email
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/confirm:
    post:
      tags:
        - users
      summary: Confirm user with a token
      operationId: postApiV1UsersConfirm
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        confirmation_token:
                          type: string
                          description: Confirmation token
                      required:
                        - confirmation_token
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Confirm user with a token
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/reset_password_by_token:
    patch:
      tags:
        - users
      summary: Reset user's password using reset password token from email
      operationId: patchApiV1UsersResetPasswordByToken
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        reset_password_token:
                          type: string
                          description: Reset password token
                        password:
                          type: string
                          description: New password
                        password_confirmation:
                          type: string
                          description: New password confirmation
                      required:
                        - reset_password_token
                        - password
                        - password_confirmation
                  required:
                    - type
        required: true
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/request_reset_password:
    post:
      tags:
        - users
      summary: Recover user's password
      operationId: postApiV1UsersRequestResetPassword
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Email address
                      required:
                        - email
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Recover user's password
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/request_confirmation_mail:
    post:
      tags:
        - users
      summary: Request Confirmation Mail
      operationId: postApiV1UsersRequestConfirmationMail
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Email address
                      required:
                        - email
                  required:
                    - type
        required: true
      responses:
        "201":
          description: Request Confirmation Mail
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users:
    post:
      tags:
        - users
      summary: Create a user
      operationId: postApiV1Users
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - users
                    attributes:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Email address
                        password:
                          type: string
                          description: Password
                        password_confirmation:
                          type: string
                          description: Password confirmation
                        terms_agreement:
                          description: Terms & Conditions agreement
                        source:
                          type: string
                          description: "Valid values: unknown, partner"
                        language:
                          type: string
                          description: Language
                          enum:
                            - en
                            - de
                            - fr
                            - es
                            - it
                      required:
                        - email
                        - password
                        - password_confirmation
                        - terms_agreement
                  required:
                    - type
        required: true
      responses:
        "204":
          description: ""
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/{id}:
    get:
      tags:
        - users
      summary: Get a user
      operationId: getApiV1UsersId
      parameters:
        - name: include
          in: query
          description: "Include associations (delimited with comma). Available
            associations: specializations"
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
            enum:
              - af
              - sq
              - ar
              - be
              - bg
              - ca
              - zh-CN
              - zh-TW
              - hr
              - cs
              - da
              - nl
              - en
              - et
              - tl
              - fi
              - fr
              - gl
              - de
              - el
              - iw
              - hi
              - hu
              - is
              - id
              - ga
              - it
              - ja
              - ko
              - la
              - lv
              - lt
              - mk
              - ms
              - mt
              - no
              - fa
              - pl
              - pt
              - ro
              - ru
              - sr
              - sk
              - sl
              - es
              - sw
              - sv
              - th
              - tr
              - uk
              - vi
              - cy
              - yi
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Return a User
          content:
            application/vnd.api+json:
              schema: {}
  /api/v1/users/{id}/integrations/partoo:
    post:
      tags:
        - users
      summary: Connect User to RPM.
      operationId: postApiV1UsersIdIntegrationsRPM
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Connected user to RPM.
          content:
            application/vnd.api+json:
              schema: {}
    delete:
      tags:
        - users
      summary: Disconnect the User from RPM.
      operationId: deleteApiV1UsersIdIntegrationsRPM
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Disconnect the User from RPM.
          content:
            application/vnd.api+json:
              schema: {}
components:
  schemas:
    Meta:
      type: object
      properties:
        total-count:
          type: number
        total-pages:
          type: number
      required:
        - total-count
        - total-pages
    User:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - users
        links:
          type: object
          properties:
            self:
              type: string
          required:
            - self
        attributes:
          type: object
          properties:
            accepted-food-detective:
              type: boolean
            allergies:
              type: string
            avatar:
              type: object
              properties:
                url:
                  type: string
              required:
                - url
            birthday:
              type: string
            city:
              type: string
            confirmed:
              type: boolean
            connected-to-partoo:
              type: boolean
            country:
              type: string
            country-code:
              type: string
            deleted:
              type: boolean
            detected-language: {}
            email:
              type: string
            favourite-drink:
              type: string
            favourite-food:
              type: string
            food-detective-status:
              type: string
            gender:
              type: string
            language:
              type: string
            monthly-bars-budget:
              type: number
            monthly-delivery-takeaway-budget:
              type: number
            monthly-restaurants-budget:
              type: number
            name:
              type: string
            partoo-user-id:
              type: string
            phone:
              type: string
            phone-country-code:
              type: string
            phone-country-prefix:
              type: string
            post-code:
              type: string
            recovery-email:
              type: string
            region: {}
            region-code:
              type: string
            registered-via-oauth:
              type: boolean
            reviews-count:
              type: number
            role:
              type: string
            sign-in-count:
              type: number
            street:
              type: string
            street-number:
              type: string
            subscription-not-terminated:
              type: boolean
            unconfirmed-email:
              type: string
        relationships:
          type: object
          properties:
            specializations:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
          required:
            - specializations
      required:
        - id
        - type
        - links
        - attributes
        - relationships
    Business:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - businesses
        links:
          type: object
          properties:
            self:
              type: string
          required:
            - self
        attributes:
          type: object
          properties:
            allow-pickup:
              type: boolean
            approved-for-lefood:
              type: boolean
            auto-accept-orders:
              type: boolean
            auto-accept-booking:
              type: boolean
            auto-accept-booking-limit:
              type: string
            available-in-lefood:
              type: boolean
            average-delivery-time:
              type: number
            average-score:
              type: number
            average-waiting-time:
              type: number
            bill-url:
              type: string
            bio:
              type: string
            breakfast-service:
              type: boolean
            brunch-service:
              type: boolean
            cafe-service:
              type: boolean
            can-pay-with-cards:
              type: boolean
            can-pay-with-cash:
              type: boolean
            can-pay-with-mobile:
              type: boolean
            city:
              type: string
            contact-with-proper-owner-possible:
              type: boolean
            country:
              type: string
            country-code:
              type: string
            currency:
              type: string
            delivery-available:
              type: boolean
            delivery-charge-ref:
              type: string
            delivery-price-participation-ratio:
              type: string
            delivery-service-type-ref:
              type: string
            delivery-url:
              type: string
            detected-language:
              type: string
            dinner-service:
              type: boolean
            email:
              type: string
            facebook:
              type: string
            favorite-id:
              type: string
            geolocation-lat:
              type: string
            geolocation-lng:
              type: string
            has-catering:
              type: boolean
            has-delivery:
              type: boolean
            has-join-the-queue:
              type: boolean
            has-online-booking:
              type: boolean
            has-private-events:
              type: boolean
            has-reservations:
              type: boolean
            has-takeaway:
              type: boolean
            hubrise-catalog-id:
              type: string
            hubrise-catalog-name:
              type: string
            instagram:
              type: string
            live-info:
              type: string
            logo:
              type: object
              properties:
                url:
                  type: string
            lunch-service:
              type: boolean
            main-photo-url:
              type: string
            max-reservation-size:
              type: number
            menu-synced:
              type: boolean
            min-amount-for-delivery-cents:
              type: number
            min-time-before-reservation:
              type: number
            name:
              type: string
            online-booking-url:
              type: string
            owner-role:
              type: string
            partoo-business-id:
              type: string
              nullable: true
            phone:
              type: string
            phone-country-code:
              type: string
            phone-country-prefix:
              type: string
            pos-partner-integration-exists:
              type: boolean
            post-code:
              type: string
            price-per-person:
              type: number
            price-range:
              type: number
            rating:
              type: number
            region:
              type: string
            region-code:
              type: string
            secret-code:
              type: string
            slug:
              type: string
            snack-service:
              type: boolean
            state:
              type: string
            street:
              type: string
            street-number:
              type: string
            stripe-currency:
              type: string
            stripe-payment-ref:
              type: string
            eat-in-ref: {}
            stripe-user-id:
              type: string
            tagline:
              type: string
            takeaway-service-type-ref:
              type: string
            takeaway-url:
              type: string
            time-of-stay:
              type: number
            time-slots:
              type: number
            timezone:
              type: string
            visible-in-lefood:
              type: boolean
            website:
              type: string
            youtube:
              type: string
            settings:
              type: object
              properties:
                orkestro_delivery_confirmation_enabled:
                  type: boolean
                order_business_web_notifications_enabled:
                  type: boolean
                reservation_business_web_notifications_enabled:
                  type: boolean
              required:
                - orkestro_delivery_confirmation_enabled
                - order_business_web_notifications_enabled
                - reservation_business_web_notifications_enabled
          required:
            - allow-pickup
            - approved-for-lefood
            - auto-accept-orders
            - auto-accept-booking
            - available-in-lefood
            - average-delivery-time
            - average-score
            - average-waiting-time
            - breakfast-service
            - brunch-service
            - cafe-service
            - can-pay-with-cards
            - can-pay-with-cash
            - can-pay-with-mobile
            - city
            - contact-with-proper-owner-possible
            - country
            - country-code
            - delivery-available
            - delivery-price-participation-ratio
            - dinner-service
            - geolocation-lat
            - geolocation-lng
            - has-catering
            - has-delivery
            - has-join-the-queue
            - has-online-booking
            - has-private-events
            - has-reservations
            - has-takeaway
            - logo
            - lunch-service
            - max-reservation-size
            - min-amount-for-delivery-cents
            - min-time-before-reservation
            - name
            - pos-partner-integration-exists
            - post-code
            - price-per-person
            - price-range
            - rating
            - region-code
            - snack-service
            - state
            - street
            - street-number
            - stripe-currency
            - eat-in-ref
            - time-of-stay
            - time-slots
            - timezone
            - visible-in-lefood
            - settings
        relationships:
          type: object
          properties:
            addresses:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            groups:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            menus:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            open-periods:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            order-periods:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            orders:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            partners:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            pictures:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            products:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            reviews:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            exclusive-suppliers:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
          required:
            - addresses
            - groups
            - menus
            - open-periods
            - order-periods
            - orders
            - partners
            - pictures
            - products
            - reviews
            - exclusive-suppliers
      required:
        - id
        - type
        - links
        - attributes
        - relationships
    Guest:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - guests
        links:
          type: object
          properties:
            self:
              type: string
          required:
            - self
        attributes:
          type: object
          properties:
            email:
              type: string
            first-name:
              type: string
            last-name:
              type: string
            birthday:
              type: string
              nullable: true
            phone:
              type: string
              nullable: true
            phone-country-code:
              type: string
              nullable: true
            phone-country-prefix:
              type: string
              nullable: true
            tags:
              type: array
              items:
                type: string
            general-note:
              type: string
              nullable: true
            visit-note:
              type: string
              nullable: true
          required:
            - email
            - first-name
            - last-name
            - birthday
            - phone
            - phone-country-code
            - phone-country-prefix
            - tags
            - general-note
            - visit-note
      required:
        - id
        - type
        - links
        - attributes
    Reservation:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - reservations
        links:
          type: object
          properties:
            self:
              type: string
          required:
            - self
        attributes:
          type: object
          properties:
            additional-info:
              type: string
              nullable: true
            comment:
              type: string
              nullable: true
            date:
              type: string
            email:
              type: string
              nullable: true
            from:
              type: number
            name:
              type: string
            other-rejection-reason:
              type: string
              nullable: true
            party-size:
              type: number
            phone:
              type: string
              nullable: true
            phone-country-code:
              type: string
              nullable: true
            phone-country-prefix:
              type: string
              nullable: true
            reject-reason:
              type: string
              nullable: true
            state:
              type: string
            table:
              type: object
              nullable: true
              properties:
                id:
                  type: number
                business_id:
                  type: number
                number:
                  type: string
                number_of_seats:
                  type: number
                uuid:
                  type: string
                shape:
                  type: string
                rotation:
                  type: number
                position_x:
                  type: number
                position_y:
                  type: number
              required:
                - id
                - business_id
                - number
                - number_of_seats
                - uuid
                - shape
                - rotation
                - position_x
                - position_y
            guest_id:
              type: string
            to:
              type: number
            created-at:
              type: string
          required:
            - additional-info
            - comment
            - date
            - email
            - from
            - name
            - other-rejection-reason
            - party-size
            - phone
            - phone-country-code
            - phone-country-prefix
            - reject-reason
            - table
            - to
            - created-at
        relationships:
          type: object
          properties:
            bookings:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            tables:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            business:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
            user:
              type: object
              properties:
                links:
                  type: object
                  properties:
                    self:
                      type: string
                    related:
                      type: string
                  required:
                    - self
                    - related
              required:
                - links
          required:
            - bookings
            - tables
            - business
            - user
      required:
        - id
        - type
        - links
        - attributes
        - relationships
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearer: []